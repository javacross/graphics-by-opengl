#version 300 es
/* 
 * Vertex shader for textured glTF asset
 */
 precision highp float;
 
//Put array declaration after name for GLSL compatibility
uniform mat4 uModelMatrix[3];
uniform vec4 _PBRDATA[2];
uniform vec3 _LIGHT_0[1];

in vec3 POSITION;
in vec3 NORMAL;
in vec2 TEXCOORD_0;

out vec4 vDiffuseColor;
out vec2 vTexCoord0;
out vec3 vNormal;
out vec3 vEye;
out vec3 vLight;

void main() {
    vec4 pos = vec4(POSITION, 1.0) * uModelMatrix[0] * uModelMatrix[1];
    gl_Position = pos * uModelMatrix[2];
    vNormal = normalize(NORMAL * mat3(uModelMatrix[0]));
    vLight = normalize(vec3(pos) -_LIGHT_0[0]);
    vTexCoord0 = TEXCOORD_0;
    vEye = normalize(vec3(-gl_Position));
}



