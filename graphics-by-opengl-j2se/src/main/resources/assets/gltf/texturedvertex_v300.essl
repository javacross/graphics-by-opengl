#version 300 es
/* 
 * Vertex shader for textured glTF asset
 */
 precision highp float;
 
//Put array declaration after name for GLSL compatibility
uniform mat4 uModelMatrix[3];
uniform vec4 COLOR_0[1];
uniform vec3 _LIGHT_0[1];

in vec3 POSITION;
in vec3 NORMAL;
in vec2 TEXCOORD_0;

out vec4 vDiffuseColor;
out vec2 vTexCoord0;


void main() {
    vec4 pos = vec4(POSITION, 1.0) * uModelMatrix[0] * uModelMatrix[1];
    gl_Position = pos * uModelMatrix[2];
    vec4 normal = normalize(vec4(NORMAL, 0.0) * uModelMatrix[0]);
    vec3 lightDir = normalize(_LIGHT_0[0] - vec3(pos));
    vDiffuseColor = vec4(max(dot(vec3(normal), lightDir), 0.0) * vec3(COLOR_0[0]), COLOR_0[0].a);
    vTexCoord0 = TEXCOORD_0;
}
